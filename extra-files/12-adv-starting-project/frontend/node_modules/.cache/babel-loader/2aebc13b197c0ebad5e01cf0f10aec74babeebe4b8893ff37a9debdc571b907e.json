{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tws80\\\\Documents\\\\React\\\\react-complete-guide-code\\\\extra-files\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage(props) {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  // const events = data.events;\n\n  // // if (data.isError) {\n  // //   return <p>{data.message}</p>;\n  // // }\n\n  // return <EventsList events={events} />;\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events,\n    children: loadedEvents => {\n      /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw { message: \"Could not fetch events\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  // loader() is not a react component, i.e. it can't be used in react components.\n  // any browser functions can be used in loader functions\n  return defer({\n    events: loadEvents() // PROMISE due to async\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","props","_s","events","resolve","children","loadedEvents","loadEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/tws80/Documents/React/react-complete-guide-code/extra-files/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage(props) {\r\n  const { events } = useLoaderData();\r\n  // const events = data.events;\r\n\r\n  // // if (data.isError) {\r\n  // //   return <p>{data.message}</p>;\r\n  // // }\r\n\r\n  // return <EventsList events={events} />;\r\n  return (\r\n    <Await resolve={events}>\r\n      {(loadedEvents) => {\r\n        <EventsList events={loadEvents} />;\r\n      }}\r\n    </Await>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch events.\" };\r\n    // throw { message: \"Could not fetch events\" };\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json({ message: \"Could not fetch events\" }, { status: 500 });\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\nexport function loader() {\r\n  // loader() is not a react component, i.e. it can't be used in react components.\r\n  // any browser functions can be used in loader functions\r\n  return defer({\r\n    events: loadEvents(), // PROMISE due to async\r\n  });\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAClC;;EAEA;EACA;EACA;;EAEA;EACA,oBACEM,OAAA,CAACH,KAAK;IAACQ,OAAO,EAAED,MAAO;IAAAE,QAAA,EACnBC,YAAY,IAAK;MACjB,aAAAP,OAAA,CAACF,UAAU;QAACM,MAAM,EAAEI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAACT,EAAA,CAhBQF,UAAU;EAAA,QACEP,aAAa;AAAA;AAAAmB,EAAA,GADzBZ,UAAU;AAkBnB,eAAeA,UAAU;AAEzB,eAAeO,UAAUA,CAAA,EAAG;EAC1B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB;EACA;EACA,OAAOvB,KAAK,CAAC;IACXQ,MAAM,EAAEI,UAAU,CAAC,CAAC,CAAE;EACxB,CAAC,CAAC;AACJ;AAAC,IAAAK,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}