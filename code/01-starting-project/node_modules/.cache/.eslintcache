[{"C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\index.js":"1","C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\App.js":"2","C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\components\\SimpleInput.js":"3"},{"size":186,"mtime":1692606269983,"results":"4","hashOfConfig":"5"},{"size":179,"mtime":1692772515420,"results":"6","hashOfConfig":"5"},{"size":1884,"mtime":1692811588089,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rtnopw",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\index.js",[],[],"C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\App.js",[],[],"C:\\Users\\tws80\\Documents\\React\\react-complete-guide-code\\code\\01-starting-project\\src\\components\\SimpleInput.js",["18"],[],"import { useEffect, useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredNameTouched, setEnterNameTouched] = useState(false);\r\n  // const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== \"\";\r\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n  let formIsValid = false;\r\n  // useEffect(() => {\r\n  //   if (enteredNameIsValid) {\r\n  //     setFormIsValid(true);\r\n  //   } else {\r\n  //     setFormIsValid(false);\r\n  //   }\r\n  // }, [enteredNameIsValid]);\r\n\r\n  if (enteredNameIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const nameInputBlurHandler = (event) => {\r\n    setEnterNameTouched(true);\r\n  };\r\n\r\n  const formSubmissonHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    setEnterNameTouched(true);\r\n\r\n    if (!enteredNameIsValid) {\r\n      return;\r\n    }\r\n    setEnteredName(\"\");\r\n    // inputNameRef.current.value = \" \" NOT IDEA, DON'T MANIPULATE THE DOM!!!\r\n    setEnterNameTouched(false);\r\n  };\r\n\r\n  const nameInputClasses = nameInputIsInValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={formSubmissonHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n      </div>\r\n      {nameInputIsInValid && (\r\n        <p className=\"error-text\">Name must not be empty</p>\r\n      )}\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n",{"ruleId":"19","severity":1,"message":"20","line":1,"column":10,"nodeType":"21","messageId":"22","endLine":1,"endColumn":19},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]