{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tws80\\\\Documents\\\\React\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../components/hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst isEmailValid = value => value.includes(\"@\");\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmailValid);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  const firstNameInputClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"First name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Last name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"c2JmG73wY3tgMC2WA0xATWtV6iA=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","isNotEmpty","value","trim","isEmailValid","includes","BasicForm","props","_s","enteredFirstName","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","enteredLastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formSubmitHandler","event","preventDefault","firstNameInputClasses","lastNameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/tws80/Documents/React/react-complete-guide-code/code/01-starting-project/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../components/hooks/use-input\";\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst isEmailValid = (value) => value.includes(\"@\");\r\n\r\nconst BasicForm = (props) => {\r\n  const {\r\n    value: enteredFirstName,\r\n    isValid: firstNameIsValid,\r\n    hasError: firstNameHasError,\r\n    valueChangeHandler: firstNameChangeHandler,\r\n    inputBlurHandler: firstNameBlurHandler,\r\n    reset: resetFirstName,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: enteredLastName,\r\n    isValid: lastNameIsValid,\r\n    hasError: lastNameHasError,\r\n    valueChangeHandler: lastNameChangeHandler,\r\n    inputBlurHandler: lastNameBlurHandler,\r\n    reset: resetLastName,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: emailIsValid,\r\n    hasError: emailHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmail,\r\n  } = useInput(isEmailValid);\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\r\n      return;\r\n    }\r\n    resetFirstName();\r\n    resetLastName();\r\n    resetEmail();\r\n  };\r\n\r\n  const firstNameInputClasses = firstNameHasError\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const lastNameInputClasses = lastNameHasError\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  const emailInputClasses = emailHasError\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className=\"control-group\">\r\n        <div className={firstNameInputClasses}>\r\n          <label htmlFor=\"firstname\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={firstNameChangeHandler}\r\n            onBlur={firstNameBlurHandler}\r\n            value={enteredFirstName}\r\n          />\r\n        </div>\r\n        {firstNameHasError && (\r\n          <p className=\"error-text\">First name must not be empty</p>\r\n        )}\r\n        <div className={lastNameInputClasses}>\r\n          <label htmlFor=\"lastname\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={lastNameChangeHandler}\r\n            onBlur={lastNameBlurHandler}\r\n            value={enteredLastName}\r\n          />\r\n        </div>\r\n        {lastNameHasError && (\r\n          <p className=\"error-text\">Last name must not be empty</p>\r\n        )}\r\n      </div>\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor=\"email\">E-Mail Address</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailBlurHandler}\r\n          value={enteredEmail}\r\n        />\r\n        {emailHasError && (\r\n          <p className=\"error-text\">Please enter a valid email</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}