{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tws80\\\\Documents\\\\React\\\\react-complete-guide-code\\\\code\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnterNameTouched] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     setFormIsValid(true);\n  //   } else {\n  //     setFormIsValid(false);\n  //   }\n  // }, [enteredNameIsValid]);\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnterNameTouched(true);\n  };\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnterNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    // inputNameRef.current.value = \" \" NOT IDEA, DON'T MANIPULATE THE DOM!!!\n    setEnterNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"5sLXKxfLRc/RuOC4afTSjco2+X4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnterNameTouched","enteredNameIsValid","trim","nameInputIsInValid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissonHandler","preventDefault","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tws80/Documents/React/react-complete-guide-code/code/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredNameTouched, setEnterNameTouched] = useState(false);\r\n  // const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== \"\";\r\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\r\n\r\n  let formIsValid = false;\r\n  // useEffect(() => {\r\n  //   if (enteredNameIsValid) {\r\n  //     setFormIsValid(true);\r\n  //   } else {\r\n  //     setFormIsValid(false);\r\n  //   }\r\n  // }, [enteredNameIsValid]);\r\n\r\n  if (enteredNameIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const nameInputChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const nameInputBlurHandler = (event) => {\r\n    setEnterNameTouched(true);\r\n  };\r\n\r\n  const formSubmissonHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    setEnterNameTouched(true);\r\n\r\n    if (!enteredNameIsValid) {\r\n      return;\r\n    }\r\n    setEnteredName(\"\");\r\n    // inputNameRef.current.value = \" \" NOT IDEA, DON'T MANIPULATE THE DOM!!!\r\n    setEnterNameTouched(false);\r\n  };\r\n\r\n  const nameInputClasses = nameInputIsInValid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  return (\r\n    <form onSubmit={formSubmissonHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameInputChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n      </div>\r\n      {nameInputIsInValid && (\r\n        <p className=\"error-text\">Name must not be empty</p>\r\n      )}\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,kBAAkB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjE;;EAEA,MAAMU,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE;EACpD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIF,kBAAkB;EAEpE,IAAIK,WAAW,GAAG,KAAK;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIH,kBAAkB,EAAE;IACtBG,WAAW,GAAG,IAAI;EACpB;EAEA,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACxCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACtCN,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMU,oBAAoB,GAAIJ,KAAK,IAAK;IACtCA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtBX,mBAAmB,CAAC,IAAI,CAAC;IAEzB,IAAI,CAACC,kBAAkB,EAAE;MACvB;IACF;IACAH,cAAc,CAAC,EAAE,CAAC;IAClB;IACAE,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMY,gBAAgB,GAAGT,kBAAkB,GACvC,sBAAsB,GACtB,cAAc;EAElB,oBACEV,OAAA;IAAMoB,QAAQ,EAAEH,oBAAqB;IAAAI,QAAA,gBACnCrB,OAAA;MAAKsB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BrB,OAAA;QAAOuB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC3B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAElB,sBAAuB;QACjCmB,MAAM,EAAEf,oBAAqB;QAC7BD,KAAK,EAAEX;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLjB,kBAAkB,iBACjBV,OAAA;MAAGsB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpD,eACD3B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BrB,OAAA;QAAQgC,QAAQ,EAAE,CAACrB,WAAY;QAAAU,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACxB,EAAA,CAlEIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}